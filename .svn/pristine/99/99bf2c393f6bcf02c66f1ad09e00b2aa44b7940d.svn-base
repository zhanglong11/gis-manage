{"version":3,"sources":["pages/Login/index.js","pages/MenuChoose/index.js","fetch/index.js","config/http.js","components/Label/index.js","components/Form/index.js","components/UploadComponent/index.js","pages/Gis/ProjectChoose/index.js","pages/Bim/ProjectChoose/index.js","components/Loading/index.js","pages/Gis/ElementClass/index.js","pages/Gis/ElementSet/index.js","pages/Gis/Main/index.js","pages/Bim/AddOne/index.js","pages/Bim/AddFolder/index.js","pages/Bim/Main/index.js","app/index.js","serviceWorker.js","index.js"],"names":["username","localStorage","getItem","password","isAuto","Login","state","isRemember","login","_this$state","_this","props","onLogin","setItem","fetch","method","headers","Content-Type","body","JSON","stringify","then","data","json","code","removeItem","message","success","history","push","pathname","error","warn","this","setState","_this2","react_default","a","createElement","className","input","placeholder","suffix","tooltip","title","icon","type","style","color","marginTop","size","onChange","e","target","value","Password","es_checkbox","checked","es_button","onClick","Component","MenuChoose","changeMenu","concat","card","Grid","width","fontSize","post","url","token","Headers","x-access-token","response","handleResponse","catch","err","console","status","statusText","CORE","Label","Object","objectSpread","labelStyle","textAlign","align","children","displayName","defaultProps","InputC","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","change","inherits","createClass","key","assign","allowClear","NumberInput","_Component2","_getPrototypeOf3","_this3","_len2","_key2","val","_this4","input_number","ImgUpload","previewVisible","previewImage","fileList","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleCancel","handlePreview","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preview","originFileObj","sent","stop","_x","handleChange","_ref2","uploadButton","es_upload","action","listType","onPreview","modal","visible","footer","onCancel","alt","src","Project","projectData","name","getData","records","addData","param","choosePro","id","projectId","renderProject","map","d","showModal","addProject","iconFileId","closeModal","Modal","onOk","destroyOnClose","components_Label","Form_InputC","precision","UploadComponent_ImgUpload","Loading","deep","Option","checkLabel","marginLeft","checkStyle","radioStyle","ElementSet","pageBaseX","pageBaseY","blockSize","imageBaseSize","imageMaxSize","isSplit","isShirt","isGenerateLod","lodLevel","lodType","isSpliceRepeatImage","isGenerateShadow","isShowDetail","editorIndex","detailEditorIndex","detailType","handleType","pId","isLoading","project","attribute","ruleData","renderRuleData","saveData","onGetTree","categoryId","item","alias","enableNull","defaultValue","renderColumns","dataIndex","render","row","index","changeTableName","es_select","changeTableVal","delTable","renderDetailColumns","changeDetailVal","Form_NumberInput","date_picker","showTime","moment","date","renderDetailData","_this$state2","undefined","onRowClick","onDetailRowClick","_this$state3","addTable","i","stopPropagation","_this$state4","splice","save","_this$state5","o","r","changeCategory","log","nextProps","nextContext","_this$state6","table","scroll","y","dataSource","columns","pagination","info","flex","disabled","es_radio","Group","elementClass","allowance","minX","maxX","minY","maxY","minZ","maxZ","longitude","latitude","reset","pid","TreeNode","Content","Sider","Main","treeData","addClass","defaultId","location","selectTree","selectedKeys","_info$node$props$data","node","dataRef","isLayer","add","warning","content","renderTreeNodes","modify","layout","height","theme","tree","showLine","onSelect","onRightClick","defaultExpandAll","padding","position","ElementClass_ElementSet","ElementSet_elementClass","AddOne","version","AddFolder","addFolder","isModel","isFolder","Main_TreeNode","Main_Sider","Main_Content","AddFolder_AddFolder","AddOne_AddOne","locale","App","locale_provider","zh_CN","react_router_dom","react_router","exact","path","component","GisProject","BimProject","GisMan","BimMan","Boolean","window","hostname","match","ReactDOM","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.597a18f6.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Input, Tooltip, Icon, Checkbox, message} from 'antd';\r\nimport './style.less'\r\n\r\nlet username = localStorage.getItem(\"gisName\");\r\nlet password = localStorage.getItem(\"gisPass\");\r\nlet isAuto = localStorage.getItem(\"isAuto\");\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        isRemember: false,\r\n        isAuto: false\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (password&&username)\r\n            this.setState({username,password,isRemember: true});\r\n        if (isAuto) {\r\n            this.props.history.push({\r\n                pathname: '/menu'\r\n            })\r\n        }\r\n    }\r\n\r\n    login = () => {\r\n        const {username, password, isRemember, isAuto} = this.state;\r\n        const {onLogin} = this.props;\r\n        if (!username) {\r\n            message.warn('请输入账号');\r\n            return;\r\n        }\r\n        if (!password) {\r\n            message.warn('请输入密码');\r\n            return;\r\n        }\r\n        if (isAuto)\r\n            localStorage.setItem('isLogin', '1');\r\n        fetch('/main/login/login', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password})\r\n        }).then(data => data.json()).then(data => {\r\n            if (data.code !== 200) {\r\n                message.error(data.message);\r\n                return;\r\n            }\r\n            //记住密码\r\n            if (isRemember)\r\n            {\r\n                localStorage.setItem('gisName', username);\r\n                localStorage.setItem('gisPass', password);\r\n            } else{\r\n                localStorage.removeItem('gisName');\r\n                localStorage.removeItem('gisPass');\r\n            }\r\n\r\n            //自动登录\r\n            if (isAuto)\r\n                localStorage.setItem('isAuto', data.data);\r\n            else\r\n                localStorage.removeItem('isAuto');\r\n            message.success(data.message);\r\n            this.props.history.push({\r\n                pathname: '/menu'\r\n            })\r\n            localStorage.setItem('token', data.data);\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<div className='login-body'>\r\n            <div className='login-wrapper'>\r\n                <h1 className='login-logo'/>\r\n                <div className='login-form'>\r\n                    <div className='login-title'>登录</div>\r\n                    <div className='login-form-content'>\r\n                        <Input\r\n                            placeholder=\"用户名\"\r\n                            suffix={\r\n                                <Tooltip title=\"Extra information\">\r\n                                    <Icon type=\"user\" style={{color: 'rgba(0,0,0,.45)'}}/>\r\n                                </Tooltip>\r\n                            }\r\n                            style={{marginTop: 10}}\r\n                            size=\"large\"\r\n                            onChange={e => {\r\n                                this.setState({username: e.target.value})\r\n                            }}\r\n                            value={this.state.username}\r\n                        />\r\n                        <Input.Password\r\n                            placeholder=\"密码\"\r\n                            suffix={\r\n                                <Tooltip title=\"Extra information\">\r\n                                    <Icon type=\"user\" style={{color: 'rgba(0,0,0,.45)'}}/>\r\n                                </Tooltip>\r\n                            }\r\n                            style={{marginTop: 10}}\r\n                            size=\"large\"\r\n                            onChange={e => {\r\n                                this.setState({password: e.target.value})\r\n                            }}\r\n                            value={this.state.password}\r\n                        />\r\n                        <div className='login-form-choose'>\r\n                            <Checkbox checked={this.state.isRemember} onChange={e => {\r\n                                this.setState({isRemember: e.target.checked})\r\n                            }}>记住密码</Checkbox>\r\n                            <Checkbox checked={this.state.isAuto} onChange={e => {\r\n                                this.setState({isAuto: e.target.checked})\r\n                            }}>自动登录</Checkbox>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Button type=\"primary\" size='large' className='login-btn' onClick={this.login}>登录</Button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Icon, Card, Button, message} from 'antd';\r\n\r\n\r\nexport default class MenuChoose extends Component {\r\n    changeMenu = (type) => {\r\n        this.props.history.push({\r\n            pathname: `/${type}project`\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Grid className='project-card' style={{width: '25%'}} onClick={()=>{this.changeMenu('bim')}}>\r\n                        <div className='project-item'>\r\n                            <Icon type=\"home\" style={{fontSize: 24}}/>\r\n                            <span>BIM</span>\r\n                        </div>\r\n                    </Card.Grid>\r\n                    <Card.Grid className='project-card' style={{width: '25%'}} onClick={()=>{this.changeMenu('gis')}}>\r\n                        <div className='project-item'>\r\n                            <Icon type=\"home\" style={{fontSize: 24}}/>\r\n                            <span>GIS</span>\r\n                        </div>\r\n                    </Card.Grid>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","function get (url) {\r\n    let token = localStorage.getItem(\"token\");\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n    });\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        console.error(`Request failed. Url = ${url} . Message = ${err}`);\r\n        return {error: {message: 'Request failed.'}};\r\n    })\r\n}\r\n\r\nfunction post (url, data) {\r\n    let token = localStorage.getItem(\"token\");\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n    });\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(data)\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        console.error(`Request failed. Url = ${url} . Message = ${err}`);\r\n        return {error: {message: 'Request failed.'}};\r\n    })\r\n}\r\n\r\nfunction put (url, data) {\r\n    let token = localStorage.getItem(\"token\");\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': token\r\n    });\r\n    return fetch(url, {\r\n        method: 'PUT',\r\n        headers: headers,\r\n        body: JSON.stringify(data)\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        console.error(`Request failed. Url = ${url} . Message = ${err}`);\r\n        return {error: {message: 'Request failed.'}};\r\n    })\r\n}\r\n\r\nfunction upload (url, data) {\r\n    let token = localStorage.getItem(\"token\");\r\n    const fileHeader = new Headers({\r\n        'x-access-token':token\r\n    });\r\n    \r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: fileHeader,\r\n        body: data\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        console.error(`Request failed. Url = ${url} . Message = ${err}`);\r\n        return {error: {message: 'Request failed.'}};\r\n    })\r\n}\r\n\r\nfunction handleResponse (url, response) {\r\n    if (response.status < 500) {\r\n        return response.json();\r\n    } else {\r\n        console.error(`Request failed. Url = ${url} . Message = ${response.statusText}`);\r\n        return {error: {message: 'Request failed due to server error '}};\r\n    }\r\n}\r\n\r\nexport {get, post, put,upload}","export const SYSTEM_URL='/bim6d-system';\r\nexport const CORE_URL='/gim6d-core';\r\nexport const CORE='/core';\r\n","import React from 'react';\r\nimport './style.less'\r\nconst Label= props=>(\r\n    <label\r\n        className=\"LabelComp\"\r\n        style={{\r\n            ...props.labelStyle,\r\n            width: props.width,\r\n            textAlign: props.align ? props.align : ''\r\n        }}\r\n    >\r\n        {props.children}\r\n    </label>\r\n)\r\n\r\nLabel.displayName = 'LabelComp';\r\nLabel.defaultProps = {\r\n    labelStyle: {},\r\n    align:'right',\r\n    width: 100\r\n};\r\nexport default Label;","import React,{Component} from 'react';\r\nimport {Input,InputNumber } from 'antd';\r\nexport class InputC extends Component{\r\n    static defaultProps={\r\n        width:200\r\n    }\r\n\r\n    change = (e) => {\r\n        const {onChange} = this.props;\r\n        if(onChange)\r\n            onChange(e.target.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Input allowClear {...this.props} style={{width:this.props.width}} onChange={e => {\r\n                    this.change(e)\r\n                }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Component{\r\n    static defaultProps={\r\n        width:200\r\n    }\r\n\r\n    change = val => {\r\n        const {onChange} = this.props;\r\n        if(onChange)\r\n            onChange(val)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <InputNumber allowClear {...this.props} style={{width:this.props.width}} onChange={val => {\r\n                    this.change(val)\r\n                }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Upload, Icon,Modal} from 'antd';\r\nimport './style.less'\r\nexport class ImgUpload extends Component {\r\n    state = {\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        fileList: []\r\n    };\r\n\r\n    getBase64=(file)=>{\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await this.getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n\r\n    handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {fileList.length? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Icon, Card, Button, message} from 'antd';\r\nimport {Route, BrowserRouter} from 'react-router-dom'\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE, SYSTEM_URL} from '../../../config/http'\r\nimport './style.less'\r\nimport Modal from \"antd/es/modal/Modal\";\r\nimport Label from '../../../components/Label'\r\nimport {InputC,NumberInput} from '../../../components/Form'\r\nimport {ImgUpload} from '../../../components/UploadComponent'\r\n\r\n\r\nconst projectData = [\r\n    {id: '1', name: '1'},\r\n    {id: '2', name: '2'},\r\n]\r\n\r\nexport default class Project extends Component {\r\n\r\n    state = {\r\n        projectData: [],\r\n        visible: false,\r\n        name: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = () => {\r\n        post(`${CORE}/gim6d/layerProject/list`, {type:2}).then(data => {\r\n            if (data.code == 200) {\r\n                this.setState({\r\n                    projectData: data.data.records\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    addData = (param) => {\r\n        post(`${CORE}/gim6d/layerProject/add`, {...param,...{type:2}}).then(data => {\r\n            if (data.code != 200) {\r\n                message.error(data.message);\r\n                return;\r\n            }\r\n            message.success(data.message)\r\n        })\r\n    }\r\n\r\n    choosePro = id => {\r\n        this.props.history.push({\r\n            pathname: '/gis',\r\n            state: {projectId:id}\r\n        })\r\n    }\r\n\r\n    renderProject = () => {\r\n        const {projectData} = this.state;\r\n        return projectData.map(d => (\r\n            <Card.Grid className='project-card' style={{width: '25%'}} onClick={() => this.choosePro(d.id)}>\r\n                <div className='project-item'>\r\n                    <Icon type=\"home\" style={{fontSize: 24}}/>\r\n                    <span>{d.name}</span>\r\n                </div>\r\n            </Card.Grid>\r\n        ))\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    addProject = () => {\r\n        const {name} = this.state;\r\n        this.addData({name, iconFileId: 1})\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button type='primary' onClick={this.showModal}>\r\n                    添加\r\n                </Button>\r\n                <Card>\r\n                    {this.renderProject()}\r\n                </Card>\r\n                <Modal\r\n                    title=\"添加项目\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.addProject}\r\n                    onCancel={this.closeModal}\r\n                    destroyOnClose\r\n                >\r\n                    <div className='class-list-content'>\r\n                        <Label>名称:</Label>\r\n                        <InputC\r\n                            precision={6}\r\n                            value={this.state.name}\r\n                            onChange={val => {\r\n                                this.setState({name: val})\r\n                            }}/>\r\n                    </div>\r\n                    {/*<div className='class-list-content' style={{marginTop:10}}>*/}\r\n                        {/*<Label>图片:</Label>*/}\r\n                        {/*<ImgUpload/>*/}\r\n                    {/*</div>*/}\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Icon, Card, Button, message} from 'antd';\r\nimport {Route, BrowserRouter} from 'react-router-dom'\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE, SYSTEM_URL} from '../../../config/http'\r\nimport './style.less'\r\nimport Modal from \"antd/es/modal/Modal\";\r\nimport Label from '../../../components/Label'\r\nimport {InputC,NumberInput} from '../../../components/Form'\r\nimport {ImgUpload} from '../../../components/UploadComponent'\r\n\r\n\r\nconst projectData = [\r\n    {id: '1', name: '1'},\r\n    {id: '2', name: '2'},\r\n]\r\n\r\nexport default class Project extends Component {\r\n\r\n    state = {\r\n        projectData: [],\r\n        visible: false,\r\n        name: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = () => {\r\n        post(`${CORE}/gim6d/layerProject/list`, {type:1}).then(data => {\r\n            if (data.code == 200) {\r\n                this.setState({\r\n                    projectData: data.data.records\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    addData = (param) => {\r\n        post(`${CORE}/gim6d/layerProject/add`, {...param,...{type:1}}).then(data => {\r\n            if (data.code != 200) {\r\n                message.error(data.message);\r\n                return;\r\n            }\r\n            message.success(data.message)\r\n        })\r\n    }\r\n\r\n    choosePro = id => {\r\n        //localStorage.setItem('projectId', id);\r\n        this.props.history.push({\r\n            pathname: '/bim',\r\n            state: {projectId:id}\r\n        })\r\n    }\r\n\r\n    renderProject = () => {\r\n        const {projectData} = this.state;\r\n        return projectData.map(d => (\r\n            <Card.Grid className='project-card' style={{width: '25%'}} onClick={() => this.choosePro(d.id)}>\r\n                <div className='project-item'>\r\n                    <Icon type=\"home\" style={{fontSize: 24}}/>\r\n                    <span>{d.name}</span>\r\n                </div>\r\n            </Card.Grid>\r\n        ))\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    addProject = () => {\r\n        const {name} = this.state;\r\n        this.addData({name, iconFileId: 1})\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button type='primary' onClick={this.showModal}>\r\n                    添加\r\n                </Button>\r\n                <Card>\r\n                    {this.renderProject()}\r\n                </Card>\r\n                <Modal\r\n                    title=\"添加项目\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.addProject}\r\n                    onCancel={this.closeModal}\r\n                    destroyOnClose\r\n                >\r\n                    <div className='class-list-content'>\r\n                        <Label>名称:</Label>\r\n                        <InputC\r\n                            precision={6}\r\n                            value={this.state.name}\r\n                            onChange={val => {\r\n                                this.setState({name: val})\r\n                            }}/>\r\n                    </div>\r\n                    <div className='class-list-content' style={{marginTop:10}}>\r\n                        <Label>图片:</Label>\r\n                        <ImgUpload/>\r\n                    </div>\r\n\r\n                </Modal>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.less'\r\n\r\nexport default props=><div className={`load-wrapper ${props.deep?'deep':''}`} />\r\n","import React, {Component} from \"react\";\r\nimport {InputC, NumberInput} from '../../../components/Form'\r\nimport Label from '../../../components/Label'\r\nimport './style.less'\r\nimport {Button, Table, Select, Checkbox, Radio, DatePicker, message} from \"antd\";\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE_URL, CORE} from \"../../../config/http\";\r\nimport Loading from '../../../components/Loading'\r\nimport moment from 'moment';\r\n\r\nconst {Option} = Select;\r\n\r\n\r\nconst checkLabel = {\r\n    width: 150,\r\n    marginLeft: 20\r\n}\r\nconst checkStyle = {\r\n    width: 130\r\n}\r\n\r\nconst radioStyle = {\r\n    width: 100,\r\n    marginLeft: 8\r\n}\r\n\r\n\r\nexport default class ElementSet extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        type: null,\r\n        pageBaseX: null,\r\n        pageBaseY: null,\r\n        blockSize: null,\r\n        imageBaseSize: null,\r\n        imageMaxSize: null,\r\n        isSplit: null,\r\n        isShirt: null,\r\n        isGenerateLod: null,\r\n        lodLevel: null,\r\n        lodType: null,\r\n        isSpliceRepeatImage: null,\r\n        isGenerateShadow: null,\r\n        isShowDetail: false,\r\n        editorIndex: null,\r\n        detailEditorIndex: null,\r\n        detailType: '',\r\n        data: [\r\n\r\n        ],\r\n        handleType: this.props.type,\r\n        projectId:this.props.projectId,\r\n        id: this.props.id,\r\n        pId: this.props.pId,\r\n        isLoading: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const {handleType} = this.state;\r\n        if (handleType == 'modify')\r\n            this.getData();\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps, nextContext) {\r\n    //     if (this.props.location.state.id != nextProps.location.state.id) {\r\n    //         this.setState({id: nextProps.location.state.id}, () => {\r\n    //             this.getData()\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (this.props.id != nextProps.id && nextProps.type == 'modify') {\r\n            this.setState({id: nextProps.id,editorIndex:null}, () => {\r\n                this.getData();\r\n            })\r\n        }\r\n\r\n        if (this.props.pId != nextProps.pId) {\r\n            this.setState({pId: nextProps.pId})\r\n        }\r\n        if (this.props.type != nextProps.type) {\r\n            this.setState({handleType: nextProps.type})\r\n        }\r\n\r\n        if (this.props.type != nextProps.type) {\r\n            this.setState({handleType: nextProps.type})\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        this.setState({isLoading: true})\r\n        const {id} = this.state;\r\n        // post(`${CORE_URL}/gim6d/layer/get/${id}`, {}).then(data => {\r\n        post(`${CORE}/gim6d/layer/get/${id}`, {}).then(data => {\r\n            let project = data.data;\r\n            if(project.attribute&&project.attribute.length){\r\n                project.attribute.map(a=>{\r\n                    a.ruleData=this.renderRuleData(a)\r\n                })\r\n            }\r\n            this.setState({\r\n                isLoading: false,\r\n                name: project.name,\r\n                type: project.type,\r\n                pageBaseX: project.pageBaseX,\r\n                pageBaseY: project.pageBaseY,\r\n                blockSize: project.blockSize,\r\n                imageBaseSize: project.imageBaseSize,\r\n                imageMaxSize: project.imageMaxSize,\r\n                isSplit: project.isSplit,\r\n                isShirt: project.isShirt,\r\n                isGenerateLod: project.isGenerateLod,\r\n                lodLevel: project.lodLevel,\r\n                lodType: project.lodType,\r\n                isSpliceRepeatImage: project.isSpliceRepeatImage,\r\n                isGenerateShadow: project.isGenerateShadow,\r\n                data: project.attribute||[]\r\n            })\r\n        })\r\n    }\r\n\r\n    saveData = (param) => {\r\n        const {id, handleType,projectId} = this.state;\r\n        const {onGetTree} = this.props;\r\n        if (handleType == 'modify')\r\n            post(`${CORE}/gim6d/layer/update/${id}`, {...param,...{projectId}}).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n\r\n\r\n        if (handleType == 'add')\r\n            post(`${CORE}/gim6d/layer/add`, {...param, ...{categoryId: this.state.pId, projectId}}).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n    }\r\n\r\n\r\n    renderRuleData=(item)=>{\r\n        if(item.type=='string'){\r\n            const ruleData=[\r\n                {name: '别名', value:item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='boolean'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value:item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value:item.defaultValue, key: 'defaultValue', type: 'string'},\r\n                {name: '长度', value:item.length, key: 'length', type: 'number'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='byte'){\r\n            const ruleData=[\r\n                {name: '别名', value:  item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'string'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='date'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'date'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='decimal'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'decimal'},\r\n                {name: '精度', value: item.precision, key: 'precision', type: 'decimal'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='double'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'decimal'},\r\n                {name: '精度', value: item.precision, key: 'precision', type: 'number'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='int16'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'decimal'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='int32'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'decimal'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='int64'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'decimal'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='single'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'decimal'},\r\n                {name: '精度', value:item.precision, key: 'precision', type: 'number'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='string'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'},\r\n                {name: '默认值', value: item.defaultValue, key: 'defaultValue', type: 'string'},\r\n                {name: '长度', value:item.length, key: 'length', type: 'number'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='blob'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='clob'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'}\r\n            ];\r\n            return ruleData\r\n        }\r\n\r\n        if(item.type=='geometry'){\r\n            const ruleData=[\r\n                {name: '别名', value: item.alias, key: 'alias', type: 'string'},\r\n                {name: '允许为空', value: item.enableNull, key: 'enableNull', type: 'boolean'}\r\n            ];\r\n            return ruleData\r\n        }\r\n    }\r\n\r\n\r\n    renderColumns = () => {\r\n        const columns = [\r\n            {\r\n                title: 'name',\r\n                dataIndex: 'name',\r\n                width: '30%',\r\n                render: (val, row, index) => {\r\n                    if (this.state.editorIndex == index) {\r\n                        return <InputC value={val} onChange={val => {\r\n                            this.changeTableName(val, index)\r\n                        }}/>\r\n                    } else {\r\n                        return <span>{val}</span>\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: 'type',\r\n                dataIndex: 'type',\r\n                width: '30%',\r\n                render: (val, row, index) => {\r\n                    return <Select allowClear value={val} style={{width: 120}} onChange={val => {\r\n                        this.changeTableVal(val, index)\r\n                    }}>\r\n                        <Option value=\"int\">布尔型</Option>\r\n                        <Option value=\"byte\">字节型</Option>\r\n                        <Option value=\"date\">日期型</Option>\r\n                        <Option value=\"decimal\">decimal</Option>\r\n                        <Option value=\"double\">double</Option>\r\n                        <Option value=\"int16\">int16</Option>\r\n                        <Option value=\"int32\">int32</Option>\r\n                        <Option value=\"int64\">int64</Option>\r\n                        <Option value=\"single\">single</Option>\r\n                        <Option value=\"string\">string</Option>\r\n                        <Option value=\"blob\">blob</Option>\r\n                        <Option value=\"clob\">clob</Option>\r\n                        <Option value=\"geometry\">geometry</Option>\r\n                    </Select>\r\n                }\r\n            },\r\n            {\r\n                title: 'handle',\r\n                dataIndex: 'handle',\r\n                width: '30%',\r\n                render: (val, row, index) => {\r\n                    return <Button type='danger' key={index} onClick={(e) => {\r\n                        this.delTable(e, index)\r\n                    }}>删除</Button>\r\n                }\r\n            }\r\n        ]\r\n        return columns;\r\n    }\r\n\r\n    renderDetailColumns = () => {\r\n        const columns = [\r\n            {\r\n                key: '1',\r\n                title: 'name',\r\n                dataIndex: 'name',\r\n                width: '50%'\r\n            },\r\n            {\r\n                key: '2',\r\n                title: 'value',\r\n                dataIndex: 'value',\r\n                width: '50%',\r\n                render: (val, row, index) => {\r\n                    if (this.state.detailEditorIndex == index) {\r\n                        const dataType = row.type;\r\n                        switch (dataType) {\r\n                            case 'string':\r\n                                return <InputC defaultValue={val} onChange={val => {\r\n                                    this.changeDetailVal(val, index)\r\n                                }}/>\r\n                            case 'number':\r\n                                return <NumberInput value={val} onChange={val => {\r\n                                    this.changeDetailVal(val, index)\r\n                                }}/>\r\n                            case 'boolean':\r\n                                return <Select style={{width: 130}} value={val===0||val===1?val:null} onChange={val => {\r\n                                    this.changeDetailVal(val, index)\r\n                                }}>\r\n                                    <Option value={1}>是</Option>\r\n                                    <Option value={0}>否</Option>\r\n                                </Select>\r\n                            case 'date':\r\n                                return <DatePicker showTime  value={val ? moment(val, 'YYYY-MM-DD HH:mm') : null}\r\n                                                   onChange={((val, date) => {\r\n                                                       this.changeDetailVal(date, index)\r\n                                                   })}/>\r\n                            case 'decimal':\r\n                                return <NumberInput\r\n                                    precision={6}\r\n                                    value={val}\r\n                                    onChange={val => {\r\n                                        this.changeDetailVal(val, index)\r\n                                    }}/>\r\n                            default:\r\n                                return <InputC value={val} onChange={val => {\r\n                                    this.changeDetailVal(val, index)\r\n                                }}/>\r\n                        }\r\n                    } else {\r\n                        const dataType = row.type;\r\n                        if(dataType=='boolean')\r\n                            return <span>{val===1?'是':val===0?'否':''}</span>\r\n\r\n                        return <span>{val}</span>\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n        return columns;\r\n    }\r\n\r\n    renderDetailData = (type) => {\r\n\r\n        const {detailType, editorIndex, data} = this.state;\r\n        if (type == 'rowClick') {\r\n            if (data[editorIndex].ruleData.length) {\r\n                return;\r\n            }\r\n        }\r\n        const booleanData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'string'},\r\n            {name: '长度', value: '', key: 'length', type: 'number'}\r\n        ]\r\n\r\n        const byteData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'string'}\r\n        ]\r\n\r\n        const dateData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'date'}\r\n        ]\r\n\r\n        const decimalData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'decimal'},\r\n            {name: '精度', value: '', key: 'precision', type: 'decimal'}\r\n        ]\r\n\r\n        const doubleData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'decimal'},\r\n            {name: '精度', value: '', key: 'precision', type: 'number'}\r\n        ]\r\n\r\n        const int16Data = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'number'}\r\n        ]\r\n\r\n        const int32Data = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'number'}\r\n        ]\r\n\r\n        const int64Data = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'number'}\r\n        ]\r\n\r\n        const singleData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'decimal'},\r\n            {name: '精度', value: '', key: 'precision', type: 'number'}\r\n        ]\r\n\r\n        const stringData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'},\r\n            {name: '默认值', value: '', key: 'defaultValue', type: 'string'},\r\n            {name: '长度', value: '', key: 'length', type: 'number'}\r\n        ]\r\n\r\n        const blobData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'}\r\n        ]\r\n\r\n        const clobData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'}\r\n        ]\r\n\r\n        const geometryData = [\r\n            {name: '别名', value: '', key: 'alias', type: 'string'},\r\n            {name: '允许为空', value: '', key: 'enableNull', type: 'boolean'}\r\n        ]\r\n\r\n        // if(data[editorIndex].ruleData.length){\r\n        //     return;\r\n        // }\r\n        if (detailType == 'boolean') {\r\n            data[editorIndex].ruleData = booleanData\r\n            this.setState({data: data})\r\n        } else if (detailType == 'byte') {\r\n            data[editorIndex].ruleData = byteData\r\n            this.setState({data: data})\r\n        } else if (detailType == 'date') {\r\n            data[editorIndex].ruleData = dateData\r\n            this.setState({data: data})\r\n        } else if (detailType == 'decimal') {\r\n            data[editorIndex].ruleData = decimalData\r\n            this.setState({data: data})\r\n        } else if (detailType == 'double') {\r\n            data[editorIndex].ruleData = doubleData\r\n            this.setState({data: data})\r\n        } else if (detailType == 'int16') {\r\n            data[editorIndex].ruleData = int16Data\r\n            this.setState({data: data})\r\n        } else if (detailType == 'int32') {\r\n            data[editorIndex].ruleData = int32Data\r\n            this.setState({data: data})\r\n        } else if (detailType == 'int64') {\r\n            data[editorIndex].ruleData = int64Data\r\n            this.setState({data: data})\r\n        } else if (detailType == 'single') {\r\n            data[editorIndex].ruleData = singleData\r\n            this.setState({data: data})\r\n        }else if (detailType == 'string') {\r\n            data[editorIndex].ruleData = stringData\r\n            this.setState({data: data})\r\n        }else if (detailType == 'blob') {\r\n            data[editorIndex].ruleData = blobData\r\n            this.setState({data: data})\r\n        }else if (detailType == 'clob') {\r\n            data[editorIndex].ruleData = clobData\r\n            this.setState({data: data})\r\n        }else if (detailType == 'geometry') {\r\n            data[editorIndex].ruleData = geometryData\r\n            this.setState({data: data})\r\n        }\r\n\r\n        if (editorIndex == null || editorIndex == undefined) {\r\n            this.setState({ruleData: []})\r\n        }\r\n    }\r\n\r\n\r\n    onRowClick = (row, index) => {\r\n        this.setState({editorIndex: index, detailType: row.type}, () => {\r\n            this.renderDetailData('rowClick');\r\n        })\r\n        if (row.type && row.name) {\r\n            this.setState({isShowDetail: true})\r\n        }\r\n    }\r\n\r\n    onDetailRowClick = (row, index) => {\r\n        this.setState({detailEditorIndex: index})\r\n    }\r\n\r\n    changeTableName = (val, index) => {\r\n        const {data} = this.state;\r\n        if (data[index].type && val)\r\n            this.setState({isShowDetail: true})\r\n        else\r\n            this.setState({isShowDetail: false})\r\n        data[index].name = val;\r\n        this.setState({data: data})\r\n    }\r\n\r\n    changeTableVal = (val, index) => {\r\n        const {data} = this.state;\r\n        if (data[index].name && val)\r\n            this.setState({isShowDetail: true})\r\n        else\r\n            this.setState({isShowDetail: false})\r\n        data[index].type = val;\r\n        this.setState({data: data, detailType: val}, () => {\r\n            this.renderDetailData('1');\r\n        })\r\n    }\r\n\r\n    changeDetailVal = (val, index) => {\r\n        const {data, editorIndex} = this.state;\r\n        data[editorIndex].ruleData[index].value = val;\r\n        this.setState({data: data})\r\n    }\r\n\r\n    addTable = () => {\r\n        const {data} = this.state;\r\n        let addObj = {\r\n            name: '',\r\n            type: 'boolean',\r\n            ruleData: []\r\n        }\r\n        data.push(addObj);\r\n        this.setState({data})\r\n    }\r\n\r\n    delTable = (e, i) => {\r\n        e.stopPropagation();\r\n        const {data, editorIndex} = this.state;\r\n        if (editorIndex == i) {\r\n            this.setState({editorIndex: null})\r\n        }\r\n        data.splice(i, 1)\r\n        this.setState({data})\r\n    }\r\n\r\n    save = () => {\r\n        const {\r\n            name, type, pageBaseX, pageBaseY, blockSize, imageBaseSize, imageMaxSize, isSplit,\r\n            isShirt, isGenerateLod, lodLevel, lodType, isSpliceRepeatImage, isGenerateShadow, data\r\n        } = this.state;\r\n        let attribute = [];\r\n        if (data&&data.length)\r\n            data.map(d => {\r\n                let o = {};\r\n                o.name = d.name;\r\n                o.type = d.type;\r\n                if (d.ruleData.length) {\r\n                    d.ruleData.map(r => {\r\n                        o[r.key] = r.value;\r\n                    })\r\n                }\r\n                attribute.push(o)\r\n            })\r\n        if (!name) {\r\n            message.error('请输入名称');\r\n            return;\r\n        }\r\n        this.saveData({\r\n            name,\r\n            type,\r\n            pageBaseX,\r\n            pageBaseY,\r\n            blockSize,\r\n            imageBaseSize,\r\n            imageMaxSize,\r\n            isSplit,\r\n            isShirt,\r\n            isGenerateLod,\r\n            lodLevel,\r\n            lodType,\r\n            isSpliceRepeatImage,\r\n            isGenerateShadow,\r\n            attribute\r\n        })\r\n    }\r\n\r\n    changeCategory = val => {\r\n        console.log(val)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            data, editorIndex, type, pageBaseX, pageBaseY, blockSize, imageBaseSize, imageMaxSize,\r\n            isSplit, isShirt, isGenerateLod, lodLevel, lodType, isSpliceRepeatImage, isGenerateShadow\r\n        } = this.state;\r\n        if (isLoading)\r\n            return (<Loading/>)\r\n        return (<div className='class-wrapper'>\r\n            <h3 className='class-title'>要素类</h3>\r\n            <div className='class-list'>\r\n                <h6 className='class-list-title'>\r\n                    常规\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>名称:</Label>\r\n                        <InputC\r\n                            value={this.state.name}\r\n                            onChange={val => {\r\n                                this.setState({name: val})\r\n                            }}/>\r\n                    </div>\r\n\r\n                    <div className='class-list-content'>\r\n                        <Label>类别:</Label>\r\n                        <Select style={{width: 140}} allowClear value={type} onChange={val => {\r\n                            this.setState({type: val})\r\n                        }}>\r\n                            <Option value={0}>简单要素类</Option>\r\n                            <Option value={1}>点</Option>\r\n                            <Option value={2}>线</Option>\r\n                            <Option value={3}>多边形</Option>\r\n                            <Option value={4}>多点</Option>\r\n                            <Option value={5}>多线</Option>\r\n                            <Option value={6}>多多边形</Option>\r\n                            <Option value={7}>多图元</Option>\r\n                            <Option value={10}>弧线</Option>\r\n                            <Option value={11}>弧面</Option>\r\n                            <Option value={12}>多弧线</Option>\r\n                            <Option value={13}>多弧面</Option>\r\n                            <Option value={14}>三维要素类</Option>\r\n                            <Option value={15}>三维分页模型</Option>\r\n                            <Option value={16}>三维影像</Option>\r\n                            <Option value={17}>三维管点</Option>\r\n                            <Option value={18}>三维管线</Option>\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='class-list'>\r\n                <h6 className='class-list-title'>\r\n                    字段\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <Button type=\"primary\" onClick={this.addTable}>\r\n                        添加\r\n                    </Button>\r\n                </div>\r\n                <div className='class-list-item'>\r\n                    <Table\r\n                        scroll={{ y: 240 }}\r\n                        style={{width: '100%'}}\r\n                        dataSource={data}\r\n                        columns={this.renderColumns()}\r\n                        pagination={false}\r\n                        onRowClick={(row, info) => {\r\n                            this.onRowClick(row, info)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='class-list-item'>\r\n                    {this.state.isShowDetail && data.length ? <Table\r\n                        style={{width: '100%'}}\r\n                        dataSource={editorIndex != null && data ? data[editorIndex].ruleData : []}\r\n                        columns={this.renderDetailColumns()}\r\n                        pagination={false}\r\n                        onRowClick={(row, info) => {\r\n                            this.onDetailRowClick(row, info)\r\n                        }}\r\n                    /> : null}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='class-list' style={{flex: 1}}>\r\n                <h6 className='class-list-title'>\r\n                    分页信息\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label align='left'>分页基点X:</Label>\r\n                        <NumberInput precision={6} value={pageBaseX} onChange={val => {\r\n                            this.setState({pageBaseX: val})\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className='class-list-content'>\r\n                        <Label align='left'>分页基点Y:</Label>\r\n                        <NumberInput precision={6} value={pageBaseY} onChange={val => {\r\n                            this.setState({pageBaseY: val})\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className='class-list-content'>\r\n                        <Label align='left'>块大小:</Label>\r\n                        <NumberInput precision={6} value={blockSize} onChange={val => {\r\n                            this.setState({blockSize: val})\r\n                        }}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label align='left' width={160}>质检图片的基础大小:</Label>\r\n                        <Select style={{width: 140}} allowClear value={imageBaseSize} onChange={val => {\r\n                            this.setState({imageBaseSize: val})\r\n                        }}>\r\n                            <Option value={64}>64*64</Option>\r\n                            <Option value={128}>128*128</Option>\r\n                            <Option value={256}>256*256</Option>\r\n                            <Option value={512}>512*512</Option>\r\n                            <Option value={1024}>1024*1024</Option>\r\n                        </Select>\r\n                    </div>\r\n\r\n                    <div className='class-list-content'>\r\n                        <Label align='left' width={160}>质检图片的最大大小:</Label>\r\n                        <Select style={{width: 140}} allowClear value={imageMaxSize} onChange={val => {\r\n                            this.setState({imageMaxSize: val})\r\n                        }}>\r\n                            <Option value={64}>64*64</Option>\r\n                            <Option value={128}>128*128</Option>\r\n                            <Option value={256}>256*256</Option>\r\n                            <Option value={512}>512*512</Option>\r\n                            <Option value={1024}>1024*1024</Option>\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='class-list-item'>\r\n                    <Checkbox\r\n                        style={checkLabel}\r\n                        checked={isSplit}\r\n                        onChange={e => {\r\n                            this.setState({isSplit: e.target.checked ? 1 : 0})\r\n                        }}\r\n                    >是否切割</Checkbox>\r\n                    <Checkbox\r\n                        style={checkStyle}\r\n                        onChange={e => {\r\n                            this.setState({isShirt: e.target.checked ? 1 : 0})\r\n                        }}\r\n                        disabled={!isSplit}\r\n                        checked={isSplit && isShirt}\r\n                    >是否加裙边</Checkbox>\r\n                </div>\r\n\r\n                <div className='class-list-item'>\r\n                    <Checkbox\r\n                        style={checkLabel}\r\n                        checked={isGenerateLod}\r\n                        onChange={e => {\r\n                            this.setState({isGenerateLod: e.target.checked ? 1 : 0,lodLevel:null,lodType:null})\r\n                        }}>产生3级LOD</Checkbox>\r\n\r\n                    <Radio.Group\r\n                        name=\"LodType\"\r\n                        value={lodLevel}\r\n                        onChange={e => {\r\n                            this.setState({lodLevel: e.target.value})\r\n                        }}>\r\n                        <Radio style={radioStyle} value={0} disabled={!isGenerateLod}>0级</Radio>\r\n                        <Radio style={radioStyle} value={1} disabled={!isGenerateLod}>1级</Radio>\r\n                        <Radio style={radioStyle} value={2} disabled={!isGenerateLod}>2级</Radio>\r\n                    </Radio.Group>\r\n                </div>\r\n                <div className='class-list-item'>\r\n                    <Radio.Group\r\n                        name=\"radiogroup\"\r\n                        value={lodType}\r\n                        onChange={e => {\r\n                            this.setState({lodType: e.target.value})\r\n                        }}>\r\n                        <Radio style={{marginLeft: 178, width: 100}} value={1}\r\n                               disabled={!isGenerateLod}>2级LOD</Radio>\r\n                        <Radio style={radioStyle} value={2} disabled={!isGenerateLod}>模型分离</Radio>\r\n                        <Radio style={radioStyle} value={3} disabled={!isGenerateLod}>3级LOD</Radio>\r\n                        <Radio style={radioStyle} value={4} disabled={!isGenerateLod}>实例化LOD</Radio>\r\n                    </Radio.Group>\r\n                </div>\r\n\r\n                <div className='class-list-item'>\r\n                    <Checkbox\r\n                        style={checkLabel}\r\n                        checked={isSpliceRepeatImage}\r\n                        onChange={e => {\r\n                            this.setState({isSpliceRepeatImage: e.target.checked ? 1 : 0})\r\n                        }}\r\n                    >重新贴图拼接</Checkbox>\r\n                    <Checkbox\r\n                        style={checkStyle}\r\n                        checked={isGenerateShadow}\r\n                        onChange={e => {\r\n                            this.setState({isGenerateShadow: e.target.checked ? 1 : 0})\r\n                        }}\r\n                    >产生阴影</Checkbox>\r\n                </div>\r\n\r\n                <div className='class-btn'>\r\n                    <Button type=\"primary\" onClick={this.save}>保存</Button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Button, message} from \"antd\";\r\nimport {InputC, NumberInput} from '../../../components/Form'\r\nimport Label from '../../../components/Label'\r\nimport './style.less'\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE_URL, CORE} from \"../../../config/http\";\r\nimport Loading from '../../../components/Loading'\r\n\r\n\r\nexport default class elementClass extends Component {\r\n    state = {\r\n        name: '',\r\n        allowance: '',\r\n        minX: '',\r\n        maxX: '',\r\n        minY: '',\r\n        maxY: '',\r\n        minZ: '',\r\n        maxZ: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        type:'',\r\n        // type: this.props.location.state.type,\r\n        // id: this.props.location.state.id,\r\n        // pId: this.props.location.state.pId\r\n        projectId:this.props.projectId,\r\n        handleType: this.props.type,\r\n        id: this.props.id,\r\n        pId: this.props.pId,\r\n        isLoading:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {handleType} = this.state;\r\n        if (handleType == 'modify')\r\n            this.getData();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (this.props.id != nextProps.id && nextProps.type == 'modify') {\r\n            this.setState({id: nextProps.id}, () => {\r\n                this.getData();\r\n            })\r\n        }\r\n\r\n        if (this.props.pId != nextProps.pId) {\r\n            this.setState({pId: nextProps.pId})\r\n        }\r\n\r\n        if (this.props.type != nextProps.type) {\r\n            this.setState({handleType: nextProps.type})\r\n        }\r\n\r\n        if (nextProps.type == 'add') {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps, nextContext) {\r\n    //     if (this.props.location.state.id != nextProps.location.state.id && nextProps.location.state.type == 'modify') {\r\n    //         this.setState({id: nextProps.location.state.id}, () => {\r\n    //             this.getData()\r\n    //         })\r\n    //     }\r\n    //     if (this.props.location.state.type != nextProps.location.state.type) {\r\n    //         this.setState({type: nextProps.location.state.type})\r\n    //     }\r\n    //     if (nextProps.location.state.type == 'add') {\r\n    //         this.reset();\r\n    //     }\r\n    // }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            allowance: '',\r\n            minX: '',\r\n            maxX: '',\r\n            minY: '',\r\n            maxY: '',\r\n            minZ: '',\r\n            maxZ: '',\r\n            longitude: '',\r\n            latitude: ''\r\n        })\r\n    }\r\n\r\n\r\n    getData = () => {\r\n        this.setState({isLoading:true})\r\n        const {id} = this.state;\r\n        post(`${CORE}/gim6d/layerCategory/get/${id}`, {}).then(data => {\r\n            let project = data.data;\r\n            this.setState({\r\n                isLoading:false,\r\n                name: project.name,\r\n                type:project.type,\r\n                allowance: project.allowance,\r\n                minX: project.minX,\r\n                maxX: project.maxX,\r\n                minY: project.minY,\r\n                maxY: project.maxY,\r\n                minZ: project.minZ,\r\n                maxZ: project.maxZ,\r\n                longitude: project.longitude,\r\n                latitude: project.latitude\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    saveData = (param) => {\r\n        const {id, handleType,pId,projectId} = this.state;\r\n        const {onGetTree} = this.props;\r\n        if (handleType == 'modify')\r\n            post(`${CORE}/gim6d/layerCategory/update/${id}`, param).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n\r\n\r\n        if (handleType == 'add')\r\n            post(`${CORE}/gim6d/layerCategory/add`, {...param, ...{pid:pId,projectId}}).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n    }\r\n\r\n\r\n    save = () => {\r\n        const {name, allowance, minX, maxX, minY, maxY,minZ,maxZ,longitude, latitude} = this.state;\r\n        if (!name) {\r\n            message.error('请输入名称');\r\n            return;\r\n        }\r\n        //\r\n        // if (!allowance) {\r\n        //     message.error('请输入容差');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!minX) {\r\n        //     message.error('请输入X最小值')\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!maxX) {\r\n        //     message.error('请输入X最大值');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!minY) {\r\n        //     message.error('请输入Y最小值');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!maxY) {\r\n        //     message.error('请输入Y最大值');\r\n        //     return;\r\n        // }\r\n        // if (!longitude) {\r\n        //     message.error('请输入经度');\r\n        //     return;\r\n        // }\r\n        // if (!latitude) {\r\n        //     message.error('请输入纬度');\r\n        //     return;\r\n        // }\r\n        this.saveData({name, allowance, minX, maxX, minY, maxY,minZ,maxZ, longitude, latitude})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoading)\r\n            return (<Loading />)\r\n        return (<div className='class-wrapper'>\r\n            <h3 className='class-title'>要素数据集</h3>\r\n            <div className='class-list'>\r\n                <h6 className='class-list-title'>\r\n                    常规\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>名称:</Label>\r\n                        <InputC\r\n                            value={this.state.name}\r\n                            onChange={val => {\r\n                                this.setState({name: val})\r\n                            }}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='class-list'>\r\n                <h6 className='class-list-title'>\r\n                    精度\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>容差:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            value={this.state.allowance}\r\n                            onChange={val => {\r\n                                this.setState({allowance: val})\r\n                            }}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='class-list'>\r\n                <h6 className='class-list-title'>\r\n                    范围\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>X最小值:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            value={this.state.minX}\r\n                            onChange={val => {\r\n                                this.setState({minX: val})\r\n                            }}/>\r\n                    </div>\r\n                    <div className='class-list-content'>\r\n                        <Label>X最大值:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            value={this.state.maxX}\r\n                            onChange={val => {\r\n                                this.setState({maxX: val})\r\n                            }}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>Y最小值:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            width={200}\r\n                            value={this.state.minY}\r\n                            onChange={val => {\r\n                                this.setState({minY: val})\r\n                            }}/>\r\n                    </div>\r\n                    <div className='class-list-content'>\r\n                        <Label>Y最大值:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            width={200}\r\n                            value={this.state.maxY}\r\n                            onChange={val => {\r\n                                this.setState({maxY: val})\r\n                            }}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>Z最小值:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            value={this.state.minZ}\r\n                            onChange={val => {\r\n                                this.setState({minZ: val})\r\n                            }}/>\r\n                    </div>\r\n                    <div className='class-list-content'>\r\n                        <Label>Z最大值:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            value={this.state.maxZ}\r\n                            onChange={val => {\r\n                                this.setState({maxZ: val})\r\n                            }}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='class-list' style={{flex:1}}>\r\n                <h6 className='class-list-title'>\r\n                    经纬度\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>经度:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            value={this.state.longitude}\r\n                            onChange={val => {\r\n                                this.setState({longitude: val})\r\n                            }}/>\r\n                    </div>\r\n                    <div className='class-list-content'>\r\n                        <Label>纬度:</Label>\r\n                        <NumberInput\r\n                            precision={6}\r\n                            value={this.state.latitude}\r\n                            onChange={val => {\r\n                                this.setState({latitude: val})\r\n                            }}/>\r\n                    </div>\r\n                </div>\r\n                <div className='class-btn'>\r\n                    <Button type=\"primary\" onClick={this.save}>保存</Button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Layout, Tree, Button, Checkbox, Modal} from 'antd';\r\nimport ElementClass from '../ElementClass'\r\nimport ElementSet from '../ElementSet'\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE_URL, CORE} from '../../../config/http'\r\nimport './style.less'\r\n\r\nconst {TreeNode} = Tree;\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    state = {\r\n        treeData: [],\r\n        id: null,\r\n        pId: 0,\r\n        key: 'set',\r\n        addClass: false,\r\n        defaultId: null,\r\n        projectId: this.props.location.state ? this.props.location.state.projectId : null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        const {projectId} = this.state;\r\n        this.setState({treeData: []});\r\n        post(`${CORE}/gim6d/layerCategory/${projectId}/tree`, {}).then(data => {\r\n            if (data.code == 200) {\r\n                this.setState({treeData: data.data})\r\n            }\r\n        })\r\n    }\r\n\r\n    selectTree = (selectedKeys, info) => {\r\n        const {isLayer, id} = info.node.props.dataRef;\r\n        if (selectedKeys.length) {\r\n            if (isLayer) {\r\n                this.setState({isLayer: true, id, key: 'class', type: 'modify', pId: id})\r\n            } else {\r\n                this.setState({isLayer: false, id, key: 'set', type: 'modify', pId: id})\r\n            }\r\n        }else{\r\n            this.setState({pId: 0,isLayer:false})\r\n        }\r\n    }\r\n\r\n    add = () => {\r\n        const {pId, addClass, isLayer} = this.state;\r\n\r\n        if (isLayer) {\r\n            Modal.warning({\r\n                title: '提示',\r\n                content: '当前目录下不能新建'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (addClass && !pId) {\r\n            Modal.warning({\r\n                title: '提示',\r\n                content: '当前目录下不能新建要素类'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (addClass)\r\n            this.setState({type: 'add', key: 'class', pId})\r\n        else\r\n            this.setState({type: 'add', key: 'set', pId})\r\n    }\r\n\r\n    renderTreeNodes = data =>\r\n        data.map(item => {\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode title={item.name} key={item.key} dataRef={item}>\r\n                        {this.renderTreeNodes(item.children)}\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            return <TreeNode {...item} title={item.name} dataRef={item}/>;\r\n        });\r\n\r\n    modify = (e) => {\r\n        console.log(e.node.props)\r\n    }\r\n\r\n    render() {\r\n        const {treeData, defaultId} = this.state;\r\n        return (\r\n            <Layout style={{height: '100%'}}>\r\n                <Sider theme='light'>\r\n                    <div className='main-logo-wrapper'><h1 className='main-logo'/></div>\r\n                    <div className='main-btn-wrapper'>\r\n                        <Button type=\"primary\" style={{width: 100}} onClick={this.add}>新建</Button>\r\n                    </div>\r\n                    <div className='main-check-wrapper'>\r\n                        <Checkbox onChange={e => {\r\n                            this.setState({addClass: e.target.checked})\r\n                        }}>新建要素类</Checkbox>\r\n                    </div>\r\n                    {treeData.length ?\r\n                        <Tree showLine onSelect={this.selectTree} onRightClick={this.modify} defaultExpandAll>\r\n                            {this.renderTreeNodes(treeData)}\r\n                        </Tree> : null}\r\n                </Sider>\r\n                <Content style={{padding: '0 16px', height: '100%', position: 'relative'}}>\r\n                    {this.state.key == 'class' ? <ElementClass\r\n                        id={this.state.id}\r\n                        pId={this.state.pId}\r\n                        type={this.state.type}\r\n                        projectId={this.state.projectId}\r\n                        onGetTree={this.getData}\r\n                    /> : <ElementSet\r\n                        id={this.state.id}\r\n                        pId={this.state.pId}\r\n                        type={this.state.type}\r\n                        projectId={this.state.projectId}\r\n                        onGetTree={this.getData}\r\n                    />}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Button, message} from \"antd\";\r\nimport {InputC,NumberInput} from '../../../components/Form'\r\nimport Label from '../../../components/Label'\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE_URL, CORE} from \"../../../config/http\";\r\nimport Loading from '../../../components/Loading'\r\n\r\n\r\nexport default class AddOne extends Component {\r\n    state = {\r\n        name: '',\r\n        version:'',\r\n        projectId:this.props.projectId,\r\n        handleType: this.props.type,\r\n        id: this.props.id,\r\n        pId: this.props.pId,\r\n        isLoading:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {handleType} = this.state;\r\n        if (handleType == 'modify')\r\n            this.getData();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (this.props.id != nextProps.id && nextProps.type == 'modify') {\r\n            this.setState({id: nextProps.id, pId: nextProps.id}, () => {\r\n                this.getData();\r\n            })\r\n        }\r\n        if (this.props.type != nextProps.type) {\r\n            this.setState({handleType: nextProps.type})\r\n        }\r\n\r\n        if (nextProps.type == 'add') {\r\n            this.reset();\r\n        }\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            version:''\r\n        })\r\n    }\r\n\r\n\r\n    getData = () => {\r\n        this.setState({isLoading:true})\r\n        const {id} = this.state;\r\n        post(`${CORE}/gim/model/get/${id}`, {}).then(data => {\r\n            let project = data.data;\r\n            this.setState({\r\n                isLoading:false,\r\n                name: project.name,\r\n                version:project.version\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    saveData = (param) => {\r\n        const {id, handleType,pId,projectId} = this.state;\r\n        const {onGetTree} = this.props;\r\n        if (handleType == 'modify')\r\n            post(`${CORE}/gim/model/update`, {...param,...{id,projectId}}).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n\r\n\r\n        if (handleType == 'add')\r\n            post(`${CORE}/gim/model/add`, {...param, ...{categoryId:pId,projectId}}).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n    }\r\n\r\n\r\n    save = () => {\r\n        const {name,version} = this.state;\r\n        if (!name) {\r\n            message.error('请输入名称');\r\n            return;\r\n        }\r\n\r\n        // if (!allowance) {\r\n        //     message.error('请输入容差');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!minX) {\r\n        //     message.error('请输入X最小值')\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!maxX) {\r\n        //     message.error('请输入X最大值');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!minY) {\r\n        //     message.error('请输入Y最小值');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!maxY) {\r\n        //     message.error('请输入Y最大值');\r\n        //     return;\r\n        // }\r\n        // if (!longitude) {\r\n        //     message.error('请输入经度');\r\n        //     return;\r\n        // }\r\n        // if (!latitude) {\r\n        //     message.error('请输入纬度');\r\n        //     return;\r\n        // }\r\n        this.saveData({name,version})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoading)\r\n            return (<Loading />)\r\n        return (<div className='class-wrapper'>\r\n            <h3 className='class-title'>单体</h3>\r\n            <div className='class-list'>\r\n                <h6 className='class-list-title'>\r\n                    常规\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>名称:</Label>\r\n                        <InputC\r\n                            value={this.state.name}\r\n                            onChange={val => {\r\n                                this.setState({name: val})\r\n                            }}/>\r\n                    </div>\r\n                    <div className='class-list-content'>\r\n                        <Label>版本:</Label>\r\n                        <NumberInput\r\n                            value={this.state.version}\r\n                            onChange={val => {\r\n                                this.setState({version: val})\r\n                            }}/>\r\n                    </div>\r\n                </div>\r\n                <div className='class-btn'>\r\n                    <Button type=\"primary\" onClick={this.save}>保存</Button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Button, message} from \"antd\";\r\nimport {InputC} from '../../../components/Form'\r\nimport Label from '../../../components/Label'\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE_URL, CORE} from \"../../../config/http\";\r\nimport Loading from '../../../components/Loading'\r\n\r\n\r\nexport default class AddFolder extends Component {\r\n    state = {\r\n        name: '',\r\n        version:'',\r\n        projectId:this.props.projectId,\r\n        handleType: this.props.type,\r\n        id: this.props.id,\r\n        pId: this.props.pId,\r\n        isLoading:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {handleType} = this.state;\r\n        if (handleType == 'modify')\r\n            this.getData();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (this.props.id != nextProps.id && nextProps.type == 'modify') {\r\n            this.setState({id: nextProps.id, pId: nextProps.id}, () => {\r\n                this.getData();\r\n            })\r\n        }\r\n        if (this.props.type != nextProps.type) {\r\n            this.setState({handleType: nextProps.type})\r\n        }\r\n\r\n        if (nextProps.type == 'add') {\r\n            this.reset();\r\n        }\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n        })\r\n    }\r\n\r\n\r\n    getData = () => {\r\n        this.setState({isLoading:true})\r\n        const {id} = this.state;\r\n        post(`${CORE}/gim/modelCategory/get/${id}`, {}).then(data => {\r\n            let project = data.data;\r\n            this.setState({\r\n                isLoading:false,\r\n                name: project.name\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    saveData = (param) => {\r\n        const {id, handleType,pId,projectId} = this.state;\r\n        const {onGetTree} = this.props;\r\n        if (handleType == 'modify')\r\n            post(`${CORE}/gim/modelCategory/update`, {...param,...{id,projectId}}).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n\r\n\r\n        if (handleType == 'add')\r\n            post(`${CORE}/gim/modelCategory/add`, {...param, ...{pid:pId,projectId}}).then(data => {\r\n                if (data.code != 200) {\r\n                    message.error(data.message)\r\n                    return;\r\n                }\r\n                if(onGetTree)\r\n                    onGetTree();\r\n                message.success(data.message)\r\n            })\r\n    }\r\n\r\n\r\n    save = () => {\r\n        const {name,pId,projectId} = this.state;\r\n        // if (!name) {\r\n        //     message.error('请输入名称');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!allowance) {\r\n        //     message.error('请输入容差');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!minX) {\r\n        //     message.error('请输入X最小值')\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!maxX) {\r\n        //     message.error('请输入X最大值');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!minY) {\r\n        //     message.error('请输入Y最小值');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (!maxY) {\r\n        //     message.error('请输入Y最大值');\r\n        //     return;\r\n        // }\r\n        // if (!longitude) {\r\n        //     message.error('请输入经度');\r\n        //     return;\r\n        // }\r\n        // if (!latitude) {\r\n        //     message.error('请输入纬度');\r\n        //     return;\r\n        // }\r\n        this.saveData({name})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoading)\r\n            return (<Loading />)\r\n        return (<div className='class-wrapper'>\r\n            <h3 className='class-title'>分类</h3>\r\n            <div className='class-list'>\r\n                <h6 className='class-list-title'>\r\n                    常规\r\n                </h6>\r\n                <div className='class-list-item'>\r\n                    <div className='class-list-content'>\r\n                        <Label>名称:</Label>\r\n                        <InputC\r\n                            value={this.state.name}\r\n                            onChange={val => {\r\n                                this.setState({name: val})\r\n                            }}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='class-btn'>\r\n                    <Button type=\"primary\" onClick={this.save}>保存</Button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Layout, Tree, Button, Checkbox, Modal} from 'antd';\r\nimport AddOne from '../AddOne'\r\nimport AddFolder from '../AddFolder'\r\nimport './style.less'\r\nimport {post} from \"../../../fetch\";\r\nimport {CORE} from \"../../../config/http\";\r\n\r\nconst {TreeNode} = Tree;\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        treeData: [],\r\n        id: null,\r\n        pId: 0,\r\n        key: 'folder',\r\n        addFolder: false,\r\n        defaultId: null,\r\n        projectId: this.props.location.state ? this.props.location.state.projectId : null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        const {projectId} = this.state;\r\n        this.setState({treeData: []});\r\n        post(`${CORE}/gim/modelCategory/${projectId}/tree`, {}).then(data => {\r\n            if (data.code == 200) {\r\n                this.setState({treeData: data.data})\r\n            }\r\n        })\r\n    }\r\n    selectTree = (selectedKeys, info) => {\r\n        const {isModel, id} = info.node.props.dataRef;\r\n        if (selectedKeys.length) {\r\n            if (!isModel) {\r\n                this.setState({isFolder: true, id, key: 'folder', type: 'modify', pId: id})\r\n            } else {\r\n                this.setState({isFolder: false, id, key: 'one', type: 'modify', pId: id})\r\n            }\r\n        } else {\r\n            this.setState({isFolder: null, id:null, key: 'folder', type: null, pId: 0})\r\n        }\r\n    }\r\n\r\n    add = () => {\r\n        const {pId, addFolder, isFolder} = this.state;\r\n        if (isFolder==false) {\r\n            Modal.warning({\r\n                title: '提示',\r\n                content: '当前目录下不能新建'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!addFolder && !pId) {\r\n            Modal.warning({\r\n                title: '提示',\r\n                content: '当前目录下不能新建单体'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (addFolder)\r\n            this.setState({type: 'add', key: 'folder', pId})\r\n        else\r\n            this.setState({type: 'add', key: 'one', pId})\r\n    }\r\n\r\n\r\n    renderTreeNodes = data =>\r\n        data.map(item => {\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode title={item.name} key={item.key} dataRef={item}>\r\n                        {this.renderTreeNodes(item.children)}\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            return <TreeNode {...item} title={item.name} dataRef={item}/>;\r\n        });\r\n\r\n\r\n    render() {\r\n        const {treeData} = this.state;\r\n        return (\r\n            <Layout style={{height: '100%'}}>\r\n                <Sider theme='light'>\r\n                    <div className='main-logo-wrapper'><h1 className='main-logo'/></div>\r\n                    <div className='main-btn-wrapper'>\r\n                        <Button type=\"primary\" style={{width: 100}} onClick={this.add}>新建</Button>\r\n                    </div>\r\n                    <div className='main-check-wrapper'>\r\n                        <Checkbox onChange={e => {\r\n                            this.setState({addFolder: e.target.checked})\r\n                        }}>新建文件夹</Checkbox>\r\n                    </div>\r\n                    {treeData.length ? <Tree showLine onSelect={this.selectTree} defaultExpandAll>\r\n                        {this.renderTreeNodes(treeData)}\r\n                    </Tree> : null}\r\n                </Sider>\r\n                <Content style={{padding: '0 16px', height: '100%', position: 'relative'}}>\r\n                    {this.state.key == 'folder' ? <AddFolder\r\n                        id={this.state.id}\r\n                        pId={this.state.pId}\r\n                        type={this.state.type}\r\n                        projectId={this.state.projectId}\r\n                        onGetTree={this.getData}\r\n                    /> : <AddOne\r\n                        id={this.state.id}\r\n                        pId={this.state.pId}\r\n                        type={this.state.type}\r\n                        projectId={this.state.projectId}\r\n                        onGetTree={this.getData}\r\n                    />}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main\r\n\r\n","import React, {Component} from 'react';\nimport {LocaleProvider} from 'antd';\nimport {Route,BrowserRouter} from 'react-router-dom'\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport Login from '../pages/Login';\nimport MenuChoose from '../pages/MenuChoose';\nimport GisProject from '../pages/Gis/ProjectChoose';\nimport BimProject from '../pages/Bim/ProjectChoose';\nimport GisMan from '../pages/Gis/Main'\nimport BimMan from '../pages/Bim/Main'\nimport './stlye.less';\n\nmoment.locale('zh-cn');\n\nclass App extends Component {\n    render() {\n        return (\n            <LocaleProvider locale={zh_CN}>\n                <BrowserRouter>\n                    <Route exact path=\"/\" component={Login}/>\n                    <Route path=\"/menu\" component={MenuChoose}/>\n                    <Route path=\"/gisProject\" component={GisProject}/>\n                    <Route path=\"/bimProject\" component={BimProject}/>\n                    <Route path=\"/gis\" component={GisMan}/>\n                    <Route path=\"/bim\" component={BimMan}/>\n                </BrowserRouter>\n            </LocaleProvider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Index is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}